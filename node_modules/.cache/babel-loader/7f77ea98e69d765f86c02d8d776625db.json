{"ast":null,"code":"var _jsxFileName = \"/Users/ramdalisay/Desktop/WorkingMouse/instagram/instagram-react12/src/components/shared/Navbar.js\";\nimport React from \"react\";\nimport { useNavbarStyles, WhiteTooltip, RedTooltip } from \"../../styles\";\nimport { AppBar, Avatar, Fade, Grid, Hidden, InputBase, Typography, Zoom } from \"@material-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport logo from \"../../images/logo.png\";\nimport { LoadingIcon, AddIcon, LikeIcon, LikeActiveIcon, ExploreIcon, ExploreActiveIcon, HomeIcon, HomeActiveIcon } from '../../icons';\nimport { defaultCurrentUser, getDefaultUser } from '../../data';\nimport NotificationTooltip from '../notification/NotificationTooltip';\nimport NotificationList from \"../notification/NotificationList\";\n\nfunction Navbar(_ref) {\n  let {\n    minimalNavbar\n  } = _ref;\n  const classes = useNavbarStyles();\n  const history = useHistory();\n  const path = history.location.pathname;\n  const [isLoadingPage, setLoadingPage] = React.useState(true);\n  React.useEffect(() => {\n    setLoadingPage(false);\n  }, [path]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Progress, {\n    isAnimating: isLoadingPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(AppBar, {\n    className: classes.appBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: classes.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), !minimalNavbar && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Search, {\n    history: history,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Links, {\n    path: path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  })))));\n}\n\nfunction Logo() {\n  const classes = useNavbarStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.logoContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.logoWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"Instagram\",\n    className: classes.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }))));\n}\n\nfunction Search(_ref2) {\n  let {\n    history\n  } = _ref2;\n  const classes = useNavbarStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [results, setResults] = React.useState([]);\n  const [query, setQuery] = React.useState('');\n  const hasResults = Boolean(query) && results.length > 0; //let loading = false;\n\n  React.useEffect(() => {\n    if (!query.trim()) return;\n    setResults(Array.from({\n      length: 5\n    }, () => getDefaultUser()));\n  }, [query]);\n\n  function handleClearInput() {\n    setQuery('');\n  }\n\n  return /*#__PURE__*/React.createElement(Hidden, {\n    xsDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(WhiteTooltip, {\n    arrow: true,\n    interactive: true,\n    TransitionComponent: Fade,\n    open: hasResults,\n    title: hasResults && /*#__PURE__*/React.createElement(Grid, {\n      className: classes.resultContainer,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, results.map(result => /*#__PURE__*/React.createElement(Grid, {\n      key: result.id,\n      item: true,\n      className: classes.resultLink,\n      onClick: () => {\n        history.push(`/${result.username}`);\n        handleClearInput();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.resultWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.avatarWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      src: result.profile_image,\n      alt: \"user avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.nameWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, result.username), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, result.name)))))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InputBase, {\n    className: classes.input,\n    onChange: event => setQuery(event.target.value),\n    startAdornment: /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.searchIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }),\n    endAdornment: loading ? /*#__PURE__*/React.createElement(LoadingIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }) : /*#__PURE__*/React.createElement(\"span\", {\n      onClick: handleClearInput,\n      className: classes.clearIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }),\n    placeholder: \"Search\",\n    value: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  })));\n}\n\nfunction Links(_ref3) {\n  let {\n    path\n  } = _ref3;\n  const classes = useNavbarStyles();\n  const [showList, setList] = React.useState(false);\n  const [showTooltip, setTooltip] = React.useState(true);\n  React.useEffect(() => {\n    const timeout = setTimeout(handleHideTooltip, 5000);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, []);\n\n  function handeToggleList() {\n    setList(prev => !prev);\n  }\n\n  function handleHideTooltip() {\n    setTooltip(false);\n  }\n\n  function handleHideList() {\n    setList(false);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.linksContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }\n  }, showList && /*#__PURE__*/React.createElement(NotificationList, {\n    handleHideList: handleHideList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 20\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.linksWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    xsDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, path === '/' ? /*#__PURE__*/React.createElement(HomeActiveIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 27\n    }\n  }) : /*#__PURE__*/React.createElement(HomeIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 48\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: \"/explorer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, path === '/explorer' ? /*#__PURE__*/React.createElement(ExploreActiveIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 35\n    }\n  }) : /*#__PURE__*/React.createElement(ExploreIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 59\n    }\n  })), /*#__PURE__*/React.createElement(RedTooltip, {\n    arrow: true,\n    open: showTooltip,\n    onOpen: handleHideTooltip,\n    TransitionComponent: Zoom,\n    title: /*#__PURE__*/React.createElement(NotificationTooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 18\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.notifications,\n    onClick: handeToggleList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, showList ? /*#__PURE__*/React.createElement(LikeActiveIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 27\n    }\n  }) : /*#__PURE__*/React.createElement(LikeIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 48\n    }\n  }))), /*#__PURE__*/React.createElement(Link, {\n    to: `${defaultCurrentUser.username}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: path === `/${defaultCurrentUser.username}` ? classes.profileActive : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Avatar, {\n    src: defaultCurrentUser.profile_image,\n    className: classes.profileImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default Navbar;","map":{"version":3,"sources":["/Users/ramdalisay/Desktop/WorkingMouse/instagram/instagram-react12/src/components/shared/Navbar.js"],"names":["React","useNavbarStyles","WhiteTooltip","RedTooltip","AppBar","Avatar","Fade","Grid","Hidden","InputBase","Typography","Zoom","Link","useHistory","logo","LoadingIcon","AddIcon","LikeIcon","LikeActiveIcon","ExploreIcon","ExploreActiveIcon","HomeIcon","HomeActiveIcon","defaultCurrentUser","getDefaultUser","NotificationTooltip","NotificationList","Navbar","minimalNavbar","classes","history","path","location","pathname","isLoadingPage","setLoadingPage","useState","useEffect","appBar","section","Logo","logoContainer","logoWrapper","Search","loading","setLoading","results","setResults","query","setQuery","hasResults","Boolean","length","trim","Array","from","handleClearInput","resultContainer","map","result","id","resultLink","push","username","resultWrapper","avatarWrapper","profile_image","nameWrapper","name","input","event","target","value","searchIcon","clearIcon","Links","showList","setList","showTooltip","setTooltip","timeout","setTimeout","handleHideTooltip","clearTimeout","handeToggleList","prev","handleHideList","linksContainer","linksWrapper","notifications","profileActive","profileImage"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useNavbarStyles, WhiteTooltip, RedTooltip } from \"../../styles\";\nimport { AppBar, Avatar, Fade, Grid, Hidden, InputBase, Typography, Zoom } from \"@material-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport logo from \"../../images/logo.png\";\nimport { LoadingIcon, AddIcon, LikeIcon, LikeActiveIcon, ExploreIcon, ExploreActiveIcon, HomeIcon, HomeActiveIcon } from '../../icons'\nimport { defaultCurrentUser, getDefaultUser } from '../../data'\nimport NotificationTooltip from '../notification/NotificationTooltip'\nimport NotificationList from \"../notification/NotificationList\";\n\nfunction Navbar({ minimalNavbar }) {\n  const classes = useNavbarStyles();\n  const history = useHistory()\n  const path = history.location.pathname;\n  const [isLoadingPage, setLoadingPage] = React.useState(true)\n\n  React.useEffect(() => {\n    setLoadingPage(false);\n  }, [path])\n\n  return (\n    <>\n    <Progress isAnimating={isLoadingPage} />\n    <AppBar className={classes.appBar}>\n      <section className={classes.section}>\n        <Logo />\n        {!minimalNavbar && (\n          <>\n            <Search history={history}/>\n            <Links path={path}/>\n          </>\n        )}\n      </section>\n    </AppBar>\n    </>\n  );\n}\n\nfunction Logo() {\n  const classes = useNavbarStyles();\n\n  return (\n    <div className={classes.logoContainer}>\n      <Link to=\"/\">\n        <div className={classes.logoWrapper}>\n          <img src={logo} alt=\"Instagram\" className={classes.logo} />\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nfunction Search({history}) {\n const classes =  useNavbarStyles()\n const [loading, setLoading] = React.useState(false)\n const [results, setResults] = React.useState([])\n const [query, setQuery] =  React.useState('')\n\n const hasResults = Boolean(query) && results.length > 0;\n\n //let loading = false;\n\n React.useEffect(() => {\n  if (!query.trim()) return ;\n  setResults(Array.from({ length: 5}, () => getDefaultUser()))\n }, [query])\n\n function handleClearInput() {\n   setQuery('');\n }\n\n return (\n   <Hidden xsDown>\n     {/* search bar suggested items are showin in the WhiteToolTip component */}\n    <WhiteTooltip\n      arrow\n      interactive\n      TransitionComponent={Fade}\n      open={hasResults}\n      title={\n        hasResults && (\n          <Grid className={classes.resultContainer} container>\n            {results.map(result => (\n              <Grid\n                key={result.id}\n                item\n                className={classes.resultLink}\n                onClick={() => {\n                  history.push(`/${result.username}`);\n                  handleClearInput()\n                }}\n              >\n                <div className={classes.resultWrapper}>\n                  <div className={classes.avatarWrapper}>\n                    <Avatar src={result.profile_image} alt=\"user avatar\"/>\n                  </div>\n                  <div className={classes.nameWrapper}>\n                    <Typography variant=\"body1\">\n                      {result.username}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                      {result.name}\n                    </Typography>\n                  </div>\n                </div>\n\n              </Grid>\n            ))}\n          </Grid>\n        )\n      }\n    >\n    <InputBase \n    className = {classes.input}\n    onChange={event => setQuery(event.target.value)}\n    startAdornment={<span className= {classes.searchIcon} />}\n    endAdornment={\n      loading ? (\n        <LoadingIcon />\n      ) : (\n        <span onClick= {handleClearInput} className={classes.clearIcon} /> \n      )\n    }\n        placeholder = \"Search\"\n        value={query}\n    />\n    </WhiteTooltip>\n   </Hidden>\n )\n}\n\nfunction Links({path}) {\n  const classes = useNavbarStyles()\n  const [showList, setList] = React.useState(false)\n  const [showTooltip, setTooltip] = React.useState(true)\n\nReact.useEffect(() => {\n  const timeout = setTimeout(handleHideTooltip, 5000)\n  return () => {\n    clearTimeout(timeout)\n  };\n}, [] )\n\nfunction handeToggleList() {\n  setList(prev => !prev);\n}\n\nfunction handleHideTooltip() {\n  setTooltip(false)\n}\n\nfunction handleHideList() {\n  setList(false)\n}\n\n  return (\n    <div className={classes.linksContainer}>\n      {/* show notification List */}\n      {showList && <NotificationList  handleHideList={handleHideList} /> }\n      <div className={classes.linksWrapper}>\n        <Hidden xsDown>\n          <AddIcon />\n        </Hidden>\n        <Link to=\"/\">\n          {path === '/' ? <HomeActiveIcon /> : <HomeIcon />}\n        </Link>\n        <Link to=\"/explorer\">\n          {path === '/explorer' ? <ExploreActiveIcon /> : <ExploreIcon />}\n        </Link>\n\n        <RedTooltip \n          arrow \n          open={showTooltip} \n          onOpen={handleHideTooltip} \n          TransitionComponent={Zoom}\n          title={<NotificationTooltip />}\n          >\n            <div className={classes.notifications} onClick={handeToggleList}>\n              {showList ? <LikeActiveIcon /> : <LikeIcon />}\n            </div>\n        </RedTooltip>\n\n        <Link to={`${defaultCurrentUser.username}`}>\n          <div className= {path === `/${defaultCurrentUser.username}` ? classes.profileActive : \"\" } >\n          </div>\n          <Avatar\n            src={defaultCurrentUser.profile_image}\n            className={classes.profileImage}\n          />\n        </Link>\n      </div>\n\n    </div>\n  )\n}\n\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}